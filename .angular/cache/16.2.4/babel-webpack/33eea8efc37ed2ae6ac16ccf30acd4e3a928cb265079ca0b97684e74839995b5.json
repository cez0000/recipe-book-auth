{"ast":null,"code":"import { ComponentFactoryResolver } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { Subscription } from \"rxjs\";\nimport { AuthService } from \"./auth.service\";\nimport { AlertModalComponent } from \"../shared/alert-modal/alert-modal.component\";\nimport { PlaceHolderDirective } from \"../shared/placeholder/placeholder.directive\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"../shared/loading-spinner/loading-spinner.component\";\nimport * as i6 from \"../shared/placeholder/placeholder.directive\";\nfunction AuthComponent_app_loading_spinner_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-loading-spinner\");\n  }\n}\nfunction AuthComponent_ng_template_18_Template(rf, ctx) {}\nexport let AuthComponent = /*#__PURE__*/(() => {\n  class AuthComponent {\n    constructor(authService, router, componentFactoryResolver) {\n      this.authService = authService;\n      this.router = router;\n      this.componentFactoryResolver = componentFactoryResolver;\n      this.isLoginMode = true;\n      this.isLoading = false;\n      this.error = null;\n      this.modalSub = new Subscription();\n      this.sub = new Subscription();\n    }\n    ngOnInit() {}\n    onSwitchMode() {\n      this.isLoginMode = !this.isLoginMode;\n    }\n    onSubmit(form) {\n      if (!form.valid) {\n        return;\n      }\n      const email = form.value.email;\n      const password = form.value.password;\n      let authObs;\n      if (this.isLoginMode) {\n        authObs = this.authService.login(email, password);\n      } else {\n        this.isLoading = true;\n        authObs = this.authService.signUp(email, password);\n      }\n      authObs.subscribe(resData => {\n        console.log(resData);\n        this.isLoading = false;\n        this.router.navigate([\"/recipes\"]);\n      }, error => {\n        this.error = error;\n        this.showErrorAlert(error);\n        this.isLoading = false;\n      });\n      form.reset();\n    }\n    handleError() {\n      this.error = null;\n    }\n    showErrorAlert(error) {\n      const alertCmpFactory = this.componentFactoryResolver.resolveComponentFactory(AlertModalComponent);\n      const hostViewContainerRef = this.alertHost.viewContainerRef;\n      hostViewContainerRef.clear();\n      const componentRef = hostViewContainerRef.createComponent(alertCmpFactory);\n      componentRef.instance.message = error;\n      this.modalSub = componentRef.instance.close.subscribe(() => {\n        this.modalSub.unsubscribe();\n        console.log(\"close\");\n        hostViewContainerRef.clear();\n      });\n    }\n    ngOnDestroy() {\n      this.sub.unsubscribe();\n    }\n    static #_ = this.ɵfac = function AuthComponent_Factory(t) {\n      return new (t || AuthComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i0.ComponentFactoryResolver));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AuthComponent,\n      selectors: [[\"app-auth\"]],\n      viewQuery: function AuthComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(PlaceHolderDirective, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.alertHost = _t.first);\n        }\n      },\n      decls: 19,\n      vars: 4,\n      consts: [[4, \"ngIf\"], [1, \"row\"], [1, \"col-xs-12\"], [3, \"ngSubmit\"], [\"authForm\", \"ngForm\"], [1, \"form-group\", 2, \"width\", \"70%\"], [\"for\", \"email\"], [\"type\", \"email\", \"id\", \"email\", \"ngModel\", \"\", \"name\", \"email\", \"email\", \"\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"ngModel\", \"\", \"name\", \"password\", \"minlength\", \"6\", \"required\", \"\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 2, \"margin-right\", \"10px\", 3, \"disabled\"], [1, \"btn\", \"btn-primary\", 3, \"click\"], [\"appPlaceholder\", \"\"]],\n      template: function AuthComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r3 = i0.ɵɵgetCurrentView();\n          i0.ɵɵtemplate(0, AuthComponent_app_loading_spinner_0_Template, 1, 0, \"app-loading-spinner\", 0);\n          i0.ɵɵelementStart(1, \"div\", 1)(2, \"div\", 2)(3, \"form\", 3, 4);\n          i0.ɵɵlistener(\"ngSubmit\", function AuthComponent_Template_form_ngSubmit_3_listener() {\n            i0.ɵɵrestoreView(_r3);\n            const _r1 = i0.ɵɵreference(4);\n            return i0.ɵɵresetView(ctx.onSubmit(_r1));\n          });\n          i0.ɵɵelementStart(5, \"div\", 5)(6, \"label\", 6);\n          i0.ɵɵtext(7, \"Email\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(8, \"input\", 7);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"div\", 5)(10, \"label\", 8);\n          i0.ɵɵtext(11, \"Password\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(12, \"input\", 9);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(13, \"div\")(14, \"button\", 10);\n          i0.ɵɵtext(15);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(16, \"button\", 11);\n          i0.ɵɵlistener(\"click\", function AuthComponent_Template_button_click_16_listener() {\n            return ctx.onSwitchMode();\n          });\n          i0.ɵɵtext(17);\n          i0.ɵɵelementEnd()()()()();\n          i0.ɵɵtemplate(18, AuthComponent_ng_template_18_Template, 0, 0, \"ng-template\", 12);\n        }\n        if (rf & 2) {\n          const _r1 = i0.ɵɵreference(4);\n          i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n          i0.ɵɵadvance(14);\n          i0.ɵɵproperty(\"disabled\", !_r1.valid);\n          i0.ɵɵadvance(1);\n          i0.ɵɵtextInterpolate(ctx.isLoginMode ? \"Login\" : \"Register\");\n          i0.ɵɵadvance(2);\n          i0.ɵɵtextInterpolate(ctx.isLoginMode ? \"Switch to register\" : \"Switch to Login\");\n        }\n      },\n      dependencies: [i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.MinLengthValidator, i4.EmailValidator, i4.NgModel, i4.NgForm, i5.LoadingSpinnerComponent, i6.PlaceHolderDirective]\n    });\n  }\n  return AuthComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}